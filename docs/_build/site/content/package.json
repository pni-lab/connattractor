{"kind":"Notebook","sha256":"b1f3e525758701361c77ed49aaba41bbb3e844d40008dc544aeb574382017be6","slug":"package","location":"/04-package.ipynb","dependencies":[],"frontmatter":{"title":"Python package","content_includes_title":false,"license":{"content":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"}},"github":"https://github.com/pni-lab/connattractor","keywords":[],"exports":[{"format":"ipynb","filename":"04-package.ipynb","url":"/04-package-9989e7cec8e99e47b1e472c7eb34b51b.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"connattractor","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NwyzrqKTO4"}],"identifier":"connattractor","label":"connattractor","html_id":"connattractor","implicit":true,"key":"f6c5Zgip4o"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"for Connectivity-based Hopfield Neural Networks (CHNNs)","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Ll8JqqJenZ"}],"key":"tn0GVFUGLQ"}],"key":"WjN7jdcxgz"}],"key":"CBHBq7c2Ts"},{"type":"heading","depth":3,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Installation","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xSnpSediZe"}],"identifier":"installation","label":"Installation","html_id":"installation","implicit":true,"key":"D7Xt6QVW2a"},{"type":"code","lang":"bash","value":"pip install connattractor","position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"key":"GYvA2KITDw"},{"type":"admonition","kind":"hint","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Hint","key":"I1xWucSuy1"}],"key":"e3MZCKXSGi"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"The package is to be considered a “low-key research preview”.\nCompatibility with various versions of the dependencies is not fully guaranteed.\nTo run analyses in a fully reproducible way, use the docker container:","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"yTlNrYkwl3"}],"key":"MIWRj0Oo9K"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":18,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"install ","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"al6Fq3y6Ld"},{"type":"link","url":"https://www.docker.com/","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"docker","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"GqDgxN7lCh"}],"urlSource":"https://www.docker.com/","key":"Bko1G1pH6q"}],"key":"imFjuIyYXF"},{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"clone the repo and start your notebook in a docker container","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"aSiKgDKR4b"},{"type":"code","lang":"bash","value":"git clone https://github.com/pni-lab/connattractor.git\ncd connattractor\ndocker run -it -v $PWD:/mounted/connattractor -p 8080:8080 -p 8888:8888 pnilab/connattractor:latest jupyter notebook","position":{"start":{"line":20,"column":1},"end":{"line":24,"column":1}},"key":"BbvT221wuY"}],"key":"NLwUa5l7gv"},{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"copy paste the last link in your browser to start the notebook","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"dTcLLKrHcI"}],"key":"bgdWapBPvT"}],"key":"wJTogovoMH"},{"type":"paragraph","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"See also: ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"rCVV8N6tHS"},{"type":"link","url":"https://github.com/pni-lab/connattractor","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"https://​github​.com​/pni​-lab​/connattractor","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"ZHPjd5hVWT"}],"urlSource":"https://github.com/pni-lab/connattractor","error":true,"key":"qq1s4XAlrp"}],"key":"dMEQgAP0aZ"}],"key":"SoBi9AjVDo"},{"type":"heading","depth":2,"position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"QuickStart Guide","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"XsFFYaGLEd"}],"identifier":"quickstart-guide","label":"QuickStart Guide","html_id":"quickstart-guide","implicit":true,"key":"SzwvBhL5x8"},{"type":"heading","depth":3,"position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"Contents","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"jQew5GdVze"}],"identifier":"contents","label":"Contents","html_id":"contents","implicit":true,"key":"b6s7o5Qr7P"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":33,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"strong","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"text","value":"Part 1","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"wWpkznbmkJ"}],"key":"cT03sjTW81"},{"type":"text","value":": The quickest way to plot and analyze your data on the CHNN projection","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"BcEQ7Ccgo4"}],"key":"aP7qdyPRSh"},{"type":"listItem","spread":true,"position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"strong","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"Part 2","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"M3vAX20ACc"}],"key":"bwZ7iyFW1J"},{"type":"text","value":": Build your own CHNN projection","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"E8PLCoz0rj"}],"key":"FBQ8R6eyaX"}],"key":"XYCd50K7nL"}],"data":{"type":"notebook-content"},"key":"BEl8XBnqaz"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TvvnWKFB8w"}],"key":"tAqH5dfTZF"}],"key":"CG2cKfBTCs"}],"data":{"type":"notebook-content"},"key":"c6ShasMhOR"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import sys\nsys.path.append('..')\nimport pickle\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom connattractor import network, analysis, utils","key":"NzZHXIaHIy"},{"type":"output","id":"LR2bQNtSPV2Ip4TPoGM0T","data":[],"key":"PoazneuY6x"}],"data":{"type":"notebook-code","ExecuteTime":{"end_time":"2023-08-21T16:31:16.104879Z","start_time":"2023-08-21T16:31:15.942684Z"}},"key":"ktde0KaRfs"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Part 1: The quickest way to plot and analyze your data on the CHNN projection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"M64KFCWRSG"}],"identifier":"part-1-the-quickest-way-to-plot-and-analyze-your-data-on-the-chnn-projection","label":"Part 1: The quickest way to plot and analyze your data on the CHNN projection","html_id":"part-1-the-quickest-way-to-plot-and-analyze-your-data-on-the-chnn-projection","implicit":true,"key":"By5GYmZ4M1"}],"data":{"type":"notebook-content"},"key":"JgXN29N1u3"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"For the quickest start, you can load the pre-computed embedding, calculated on the example connectome provided with the package.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VIOFPgOatX"}],"key":"OygtGboC86"}],"data":{"type":"notebook-content"},"key":"tRq4GwpjYt"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"hopfield_embedding = utils.get_fcHNN_template_embedding()","key":"JsMgmazkSi"},{"type":"output","id":"sI45eGkxsHl75wT6a5pN4","data":[],"key":"IuIWRoSWCV"}],"data":{"type":"notebook-code"},"key":"BC4vAV2MZu"},{"type":"block","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load the example task data (scrubbed and seperated into task and rest)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vni8UOEFPm"}],"identifier":"load-the-example-task-data-scrubbed-and-seperated-into-task-and-rest","label":"Load the example task data (scrubbed and seperated into task and rest)","html_id":"load-the-example-task-data-scrubbed-and-seperated-into-task-and-rest","implicit":true,"key":"JXyPX8sWFY"}],"data":{"type":"notebook-content"},"key":"WWG5IJRtqK"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"rest, sub_rest, task, sub_task = utils.get_ex_task_data()","key":"mYK7jGtg2U"},{"type":"output","id":"KtU9yLzW721K7_MyFb0IY","data":[{"name":"stdout","output_type":"stream","text":"perc. scrubbed: 0.8133971291866029\nperc. scrubbed: 0.5741626794258373\nperc. scrubbed: 0.6267942583732058\nperc. scrubbed: 0.7081339712918661\n"},{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"((405, 122), (1052, 122), array([42.3, 43.3, 44.3, 45.3, 46. , 46.3]), 405)","content_type":"text/plain"}}}],"key":"sQ1mtwqvEJ"}],"data":{"type":"notebook-code"},"key":"fwwD9zwoWz"},{"type":"block","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the data in the projection plane","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IJHK68Lsdz"}],"identifier":"plot-the-data-in-the-projection-plane","label":"Plot the data in the projection plane","html_id":"plot-the-data-in-the-projection-plane","implicit":true,"key":"vQCPcvD4Gs"}],"data":{"type":"notebook-content"},"key":"V9xoSxGBbN"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"To get a good impression on the data in the projection, we first plot a contourplot of all activations of the rest data and plot the mean activations during rest of all study participants on the projection. We repeat the same for the task data.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pPjZnLyqSN"}],"key":"y2IRGqPCDT"}],"data":{"type":"notebook-content"},"key":"k7DxRqMj3a"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(1, 2, subplot_kw={'projection': 'polar'}, figsize=(8, 4))\n    \nhopfield_embedding.plot(rest, plot_type='contourf', ax=ax[0],\n                    density_bins=30, density_sigma=1, levels=6, alpha=0.8, cmap='Blues',\n                    attractor_plot_type='glassbrain', attractor_kwargs=dict(cmap='binary'),\n                    regimes_fill_kwargs=dict(alpha=0.0),\n                    regimes_contour_kwargs=dict(alpha=1.0, colors='black')\n                   )\n\nsub_means_rest = np.array([np.mean(rest[sub_rest==sub], axis=0) for sub in np.unique(sub_rest)])\nsub_means_task = np.array([np.mean(task[sub_task==sub], axis=0) for sub in np.unique(sub_task)])\n\nhopfield_embedding.plot(sub_means_rest, plot_type='scatter', ax=ax[0],\n                        marker='^', c='black', s=30,\n                        attractor_plot_type='scatter', attractor_kwargs=dict(alpha=0),\n                        regimes_fill_kwargs=dict(alpha=0.0),\n                        regimes_contour_kwargs=dict(alpha=1.0, colors='black')\n                       )\nax[0].set_yticks([])\nax[0].grid(False)\n\n\nhopfield_embedding.plot(task, plot_type='contourf', ax=ax[1],\n                    density_bins=30, density_sigma=1, levels=6, alpha=0.8, cmap='Reds',\n                    attractor_plot_type='glassbrain', attractor_kwargs=dict(cmap='binary'),\n                    regimes_fill_kwargs=dict(alpha=0.0),\n                    regimes_contour_kwargs=dict(alpha=1.0, colors='black')\n                   )\n\nhopfield_embedding.plot(sub_means_task, plot_type='scatter', ax=ax[1],\n                        marker='^', c='black', s=30,\n                        attractor_plot_type='scatter', attractor_kwargs=dict(alpha=0),\n                        regimes_fill_kwargs=dict(alpha=0.0),\n                        regimes_contour_kwargs=dict(alpha=1.0, colors='black')\n                       )\n\n\n    \n\nax[1].set_yticks([])\nax[1].grid(False)\nplt.show()","key":"HVnACUYqtS"},{"type":"output","id":"UNKX0jJXSn6njkruMaCry","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"e6fffb37e441e42c955e34164030e20b","path":"/e6fffb37e441e42c955e34164030e20b.png"},"text/plain":{"content":"<Figure size 800x400 with 20 Axes>","content_type":"text/plain"}}}],"key":"DCMSLFxL0D"}],"data":{"type":"notebook-code"},"key":"jtdSSAbK3s"},{"type":"block","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Statistical analysis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EHBygOph4g"}],"identifier":"statistical-analysis","label":"Statistical analysis","html_id":"statistical-analysis","implicit":true,"key":"pVaHVSgZrL"}],"data":{"type":"notebook-content"},"key":"zP5vDWMZXn"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"To compare the two conditions statistically with a permutation test, compare the position difference in the projection plane as well as the absolute energy difference as test statistics. In this example we calculate 1000 permutations, swapping the conditions and plot the actual difference against the null distribution.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oMBEL9jPUf"}],"key":"sTtKOWXvNk"}],"data":{"type":"notebook-content"},"key":"LformrSqgZ"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"from numpy.linalg import norm\nrandom = np.random.default_rng(42)\nnoise = 0.37\nnum_perm = 1000\n\n\nsub_means_rest = np.array([np.mean(rest[sub_rest==sub], axis=0) for sub in np.unique(sub_rest)])\nsub_means_task = np.array([np.mean(task[sub_task==sub], axis=0) for sub in np.unique(sub_task)])\n\ntask_embedded = hopfield_embedding.embedding_model.transform(sub_means_task)[:, :2]\nrest_embedded = hopfield_embedding.embedding_model.transform(sub_means_rest)[:, :2]\ndiffs = task_embedded - rest_embedded\ntrue_diffs_norm = np.array([norm(d) for d in diffs])\ntrue_diff_mean = np.mean(true_diffs_norm)\n\nenergy_rest = np.array([hopfield_embedding.hopnet.energy(s) for s in sub_means_rest])\nenergy_task = np.array([hopfield_embedding.hopnet.energy(s) for s in sub_means_task])\n\ntrue_energy_diff = energy_rest - energy_task\ntrue_energy_diff_mean = np.mean(true_energy_diff)\n\nn = len(diffs)\ndiffs = []\nenergy_diffs = []\n\nfor p in range(num_perm):\n    # swap conditions randomly (i.e. sign flip)\n    \n    perm_i = random.choice([1,-1], n)\n    diffs.append(np.mean(true_diffs_norm * perm_i))\n    energy_diffs.append(np.mean(true_energy_diff * perm_i))\n\n\nplt.figure(figsize=(1,1))\nplt.hist(diffs, color='gray')\nplt.axvline(true_diff_mean, color='black')\n\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['top'].set_visible(False)\nplt.show()\n\nplt.figure(figsize=(1,1))\nplt.hist(energy_diffs, color='gray')\nplt.axvline(true_energy_diff_mean, color='black')\n\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['top'].set_visible(False)\nplt.show()\n\n\nprint('p(projection) =', (diffs>true_diff_mean).sum()/num_perm)\nprint('p(energy) =', (energy_diffs>true_energy_diff_mean).sum()/num_perm)\n    ","key":"DrCEWeg665"},{"type":"output","id":"RiStg0TuDMY2v2FD3zPWK","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"f91e78c06010bd7c5508247298cc602f","path":"/f91e78c06010bd7c5508247298cc602f.png"},"text/plain":{"content":"<Figure size 100x100 with 1 Axes>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"73dee6c7a6cbda63c9b3d171eb4ecf0d","path":"/73dee6c7a6cbda63c9b3d171eb4ecf0d.png"},"text/plain":{"content":"<Figure size 100x100 with 1 Axes>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"p(projection) = 0.0\np(energy) = 0.0\n"}],"key":"O1GtTwSOwI"}],"data":{"type":"notebook-code"},"key":"B0mvS9lYgH"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Part 2: Build your own CHNN projection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"V1gWEejaAo"}],"identifier":"part-2-build-your-own-chnn-projection","label":"Part 2: Build your own CHNN projection","html_id":"part-2-build-your-own-chnn-projection","implicit":true,"key":"Msah7WXiTp"}],"data":{"type":"notebook-content"},"key":"V58pL65ZiC"},{"type":"block","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Obtain functional connectivity matrix","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Df4GLUOvlg"}],"identifier":"obtain-functional-connectivity-matrix","label":"Obtain functional connectivity matrix","html_id":"obtain-functional-connectivity-matrix","implicit":true,"key":"UGcERtEsxl"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Should be a partial correlation matrix, square and symmetric.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ga1WgERskm"}],"key":"lKUwKvmoLx"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Below, we load in an example connectome, derived from study 1 of the manuscript.\nGiven the high replicability and generalizability of CHNN analyses, the connectome does not have to stem from the analyzed dataset. Similarly to anatomical standrad templates in neuroimaging practice, the supplied example connectome can be considered a standard connectome template.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"K1wS1CDvQ1"}],"key":"q1cAibF3Lg"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Users are, nevertheless, encouraged to use dataset-specific connectomes.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"G3w8OZsPMS"}],"key":"XnLRbzoR2q"},{"type":"heading","depth":5,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Let’s load in the example connectome","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"xxRXG3z3PF"}],"identifier":"lets-load-in-the-example-connectome","label":"Let’s load in the example connectome","html_id":"lets-load-in-the-example-connectome","implicit":true,"key":"GDQGvwHmnl"}],"data":{"type":"notebook-content"},"key":"alpVINqwXR"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"mtx = utils.get_ex_connectome()\nmtx","key":"dHgjcB9rUk"},{"type":"output","id":"MofFzWrAD6VWS_C5Vcy5e","data":[{"output_type":"execute_result","execution_count":2,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CER6_p</th>\n      <th>CER7ab</th>\n      <th>R_CERCR2_p</th>\n      <th>CER9_v</th>\n      <th>CER6_a</th>\n      <th>L_CERCR2_a</th>\n      <th>CER9_d</th>\n      <th>CER9_m</th>\n      <th>CER7b_m</th>\n      <th>L_CERCR2_p</th>\n      <th>...</th>\n      <th>LVISnet_vp</th>\n      <th>MVISnet_p</th>\n      <th>MVISnet_av</th>\n      <th>LVISnet_p</th>\n      <th>PVISnet_dm</th>\n      <th>PVISnet_vm</th>\n      <th>MVISnet_ad</th>\n      <th>VVISnet_l</th>\n      <th>LVISnet_DP</th>\n      <th>VVISnet_m</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.000000</td>\n      <td>0.023502</td>\n      <td>0.136701</td>\n      <td>0.008193</td>\n      <td>0.074264</td>\n      <td>0.021580</td>\n      <td>0.170827</td>\n      <td>0.028969</td>\n      <td>0.015883</td>\n      <td>0.130981</td>\n      <td>...</td>\n      <td>-0.002248</td>\n      <td>-0.008683</td>\n      <td>0.000152</td>\n      <td>0.035482</td>\n      <td>0.007705</td>\n      <td>-0.029055</td>\n      <td>0.009439</td>\n      <td>-0.001390</td>\n      <td>0.009582</td>\n      <td>0.007318</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.023502</td>\n      <td>1.000000</td>\n      <td>0.008167</td>\n      <td>0.024126</td>\n      <td>0.046648</td>\n      <td>0.050263</td>\n      <td>0.010915</td>\n      <td>0.070042</td>\n      <td>0.085829</td>\n      <td>-0.018248</td>\n      <td>...</td>\n      <td>0.033791</td>\n      <td>0.004000</td>\n      <td>0.011493</td>\n      <td>0.007582</td>\n      <td>-0.026080</td>\n      <td>0.008013</td>\n      <td>-0.009007</td>\n      <td>0.009144</td>\n      <td>0.001391</td>\n      <td>0.012831</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.136701</td>\n      <td>0.008167</td>\n      <td>1.000000</td>\n      <td>0.005056</td>\n      <td>0.062669</td>\n      <td>0.028488</td>\n      <td>0.041643</td>\n      <td>0.045169</td>\n      <td>0.112164</td>\n      <td>0.157129</td>\n      <td>...</td>\n      <td>-0.003300</td>\n      <td>0.016258</td>\n      <td>-0.011801</td>\n      <td>-0.001794</td>\n      <td>-0.000603</td>\n      <td>0.012350</td>\n      <td>-0.002757</td>\n      <td>-0.004949</td>\n      <td>-0.004858</td>\n      <td>-0.000633</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.008193</td>\n      <td>0.024126</td>\n      <td>0.005056</td>\n      <td>1.000000</td>\n      <td>-0.020494</td>\n      <td>-0.008721</td>\n      <td>-0.004522</td>\n      <td>0.203525</td>\n      <td>-0.003757</td>\n      <td>0.019182</td>\n      <td>...</td>\n      <td>0.021645</td>\n      <td>0.000472</td>\n      <td>-0.003774</td>\n      <td>0.003395</td>\n      <td>-0.032710</td>\n      <td>-0.015305</td>\n      <td>0.007360</td>\n      <td>0.004044</td>\n      <td>-0.011696</td>\n      <td>-0.001293</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.074264</td>\n      <td>0.046648</td>\n      <td>0.062669</td>\n      <td>-0.020494</td>\n      <td>1.000000</td>\n      <td>0.080293</td>\n      <td>0.024584</td>\n      <td>0.002491</td>\n      <td>-0.021720</td>\n      <td>0.042291</td>\n      <td>...</td>\n      <td>-0.020753</td>\n      <td>0.005295</td>\n      <td>-0.012844</td>\n      <td>-0.014833</td>\n      <td>0.009989</td>\n      <td>0.024167</td>\n      <td>-0.005186</td>\n      <td>-0.016061</td>\n      <td>0.010920</td>\n      <td>-0.007650</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>117</th>\n      <td>-0.029055</td>\n      <td>0.008013</td>\n      <td>0.012350</td>\n      <td>-0.015305</td>\n      <td>0.024167</td>\n      <td>-0.007512</td>\n      <td>0.045950</td>\n      <td>0.010056</td>\n      <td>-0.006412</td>\n      <td>-0.000421</td>\n      <td>...</td>\n      <td>0.011186</td>\n      <td>0.215436</td>\n      <td>-0.011083</td>\n      <td>-0.003814</td>\n      <td>0.163692</td>\n      <td>1.000000</td>\n      <td>0.013773</td>\n      <td>0.049101</td>\n      <td>-0.028493</td>\n      <td>0.115196</td>\n    </tr>\n    <tr>\n      <th>118</th>\n      <td>0.009439</td>\n      <td>-0.009007</td>\n      <td>-0.002757</td>\n      <td>0.007360</td>\n      <td>-0.005186</td>\n      <td>-0.023476</td>\n      <td>-0.004195</td>\n      <td>-0.029927</td>\n      <td>-0.023948</td>\n      <td>-0.023841</td>\n      <td>...</td>\n      <td>-0.012657</td>\n      <td>0.258308</td>\n      <td>0.091981</td>\n      <td>0.007686</td>\n      <td>-0.001867</td>\n      <td>0.013773</td>\n      <td>1.000000</td>\n      <td>-0.013407</td>\n      <td>0.017465</td>\n      <td>0.032366</td>\n    </tr>\n    <tr>\n      <th>119</th>\n      <td>-0.001390</td>\n      <td>0.009144</td>\n      <td>-0.004949</td>\n      <td>0.004044</td>\n      <td>-0.016061</td>\n      <td>0.004057</td>\n      <td>0.002311</td>\n      <td>-0.022643</td>\n      <td>0.001888</td>\n      <td>-0.007811</td>\n      <td>...</td>\n      <td>0.139682</td>\n      <td>-0.014010</td>\n      <td>0.077810</td>\n      <td>0.079338</td>\n      <td>0.055300</td>\n      <td>0.049101</td>\n      <td>-0.013407</td>\n      <td>1.000000</td>\n      <td>0.081084</td>\n      <td>0.162297</td>\n    </tr>\n    <tr>\n      <th>120</th>\n      <td>0.009582</td>\n      <td>0.001391</td>\n      <td>-0.004858</td>\n      <td>-0.011696</td>\n      <td>0.010920</td>\n      <td>0.002928</td>\n      <td>-0.001322</td>\n      <td>0.004114</td>\n      <td>-0.006720</td>\n      <td>-0.008002</td>\n      <td>...</td>\n      <td>0.066451</td>\n      <td>0.001324</td>\n      <td>-0.001214</td>\n      <td>0.115287</td>\n      <td>0.089609</td>\n      <td>-0.028493</td>\n      <td>0.017465</td>\n      <td>0.081084</td>\n      <td>1.000000</td>\n      <td>0.000165</td>\n    </tr>\n    <tr>\n      <th>121</th>\n      <td>0.007318</td>\n      <td>0.012831</td>\n      <td>-0.000633</td>\n      <td>-0.001293</td>\n      <td>-0.007650</td>\n      <td>0.026176</td>\n      <td>-0.012108</td>\n      <td>-0.008898</td>\n      <td>-0.002792</td>\n      <td>-0.002899</td>\n      <td>...</td>\n      <td>0.024625</td>\n      <td>0.088237</td>\n      <td>0.171533</td>\n      <td>0.016583</td>\n      <td>0.043844</td>\n      <td>0.115196</td>\n      <td>0.032366</td>\n      <td>0.162297</td>\n      <td>0.000165</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>122 rows × 122 columns</p>\n</div>","content_type":"text/html"},"text/plain":{"content":"       CER6_p    CER7ab  R_CERCR2_p    CER9_v    CER6_a  L_CERCR2_a    CER9_d  \\\n0    1.000000  0.023502    0.136701  0.008193  0.074264    0.021580  0.170827   \n1    0.023502  1.000000    0.008167  0.024126  0.046648    0.050263  0.010915   \n2    0.136701  0.008167    1.000000  0.005056  0.062669    0.028488  0.041643   \n3    0.008193  0.024126    0.005056  1.000000 -0.020494   -0.008721 -0.004522   \n4    0.074264  0.046648    0.062669 -0.020494  1.000000    0.080293  0.024584   \n..        ...       ...         ...       ...       ...         ...       ...   \n117 -0.029055  0.008013    0.012350 -0.015305  0.024167   -0.007512  0.045950   \n118  0.009439 -0.009007   -0.002757  0.007360 -0.005186   -0.023476 -0.004195   \n119 -0.001390  0.009144   -0.004949  0.004044 -0.016061    0.004057  0.002311   \n120  0.009582  0.001391   -0.004858 -0.011696  0.010920    0.002928 -0.001322   \n121  0.007318  0.012831   -0.000633 -0.001293 -0.007650    0.026176 -0.012108   \n\n       CER9_m   CER7b_m  L_CERCR2_p  ...  LVISnet_vp  MVISnet_p  MVISnet_av  \\\n0    0.028969  0.015883    0.130981  ...   -0.002248  -0.008683    0.000152   \n1    0.070042  0.085829   -0.018248  ...    0.033791   0.004000    0.011493   \n2    0.045169  0.112164    0.157129  ...   -0.003300   0.016258   -0.011801   \n3    0.203525 -0.003757    0.019182  ...    0.021645   0.000472   -0.003774   \n4    0.002491 -0.021720    0.042291  ...   -0.020753   0.005295   -0.012844   \n..        ...       ...         ...  ...         ...        ...         ...   \n117  0.010056 -0.006412   -0.000421  ...    0.011186   0.215436   -0.011083   \n118 -0.029927 -0.023948   -0.023841  ...   -0.012657   0.258308    0.091981   \n119 -0.022643  0.001888   -0.007811  ...    0.139682  -0.014010    0.077810   \n120  0.004114 -0.006720   -0.008002  ...    0.066451   0.001324   -0.001214   \n121 -0.008898 -0.002792   -0.002899  ...    0.024625   0.088237    0.171533   \n\n     LVISnet_p  PVISnet_dm  PVISnet_vm  MVISnet_ad  VVISnet_l  LVISnet_DP  \\\n0     0.035482    0.007705   -0.029055    0.009439  -0.001390    0.009582   \n1     0.007582   -0.026080    0.008013   -0.009007   0.009144    0.001391   \n2    -0.001794   -0.000603    0.012350   -0.002757  -0.004949   -0.004858   \n3     0.003395   -0.032710   -0.015305    0.007360   0.004044   -0.011696   \n4    -0.014833    0.009989    0.024167   -0.005186  -0.016061    0.010920   \n..         ...         ...         ...         ...        ...         ...   \n117  -0.003814    0.163692    1.000000    0.013773   0.049101   -0.028493   \n118   0.007686   -0.001867    0.013773    1.000000  -0.013407    0.017465   \n119   0.079338    0.055300    0.049101   -0.013407   1.000000    0.081084   \n120   0.115287    0.089609   -0.028493    0.017465   0.081084    1.000000   \n121   0.016583    0.043844    0.115196    0.032366   0.162297    0.000165   \n\n     VVISnet_m  \n0     0.007318  \n1     0.012831  \n2    -0.000633  \n3    -0.001293  \n4    -0.007650  \n..         ...  \n117   0.115196  \n118   0.032366  \n119   0.162297  \n120   0.000165  \n121   1.000000  \n\n[122 rows x 122 columns]","content_type":"text/plain"}}}],"key":"wJpvrSDbxe"}],"data":{"type":"notebook-code","ExecuteTime":{"end_time":"2023-08-21T16:32:22.601047Z","start_time":"2023-08-21T16:32:22.546256Z"}},"key":"Mb0jNfQYng"},{"type":"block","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Construct your fcHNN","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RD0xECtxZs"}],"identifier":"construct-your-fchnn","label":"Construct your fcHNN","html_id":"construct-your-fchnn","implicit":true,"key":"VNOFIZc3mD"}],"data":{"type":"notebook-content"},"key":"V8woIIVNmz"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"hopnet = network.Hopfield(mtx)\nhopnet.plot_weights()","key":"fiAE6sv8in"},{"type":"output","id":"rEJb-FNVTD4D9u38jwO7K","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"3fc63aead9275d198a41f25d64320f9c","path":"/3fc63aead9275d198a41f25d64320f9c.png"},"text/plain":{"content":"<Figure size 600x500 with 2 Axes>","content_type":"text/plain"}}}],"key":"TsTjyLIwfW"}],"data":{"type":"notebook-code","ExecuteTime":{"end_time":"2023-08-21T16:34:51.827031Z","start_time":"2023-08-21T16:34:51.489089Z"}},"key":"Nbgg6IZnHA"},{"type":"block","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Run the stochastic relaxation procedure to obtain simulated states","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Sjpqm5z4f4"}],"identifier":"run-the-stochastic-relaxation-procedure-to-obtain-simulated-states","label":"Run the stochastic relaxation procedure to obtain simulated states","html_id":"run-the-stochastic-relaxation-procedure-to-obtain-simulated-states","implicit":true,"key":"hAoE3r4Aeq"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"It may take a few seconds...","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"gFhLAd4hCu"}],"key":"hjETA7ClcG"}],"data":{"type":"notebook-content","ExecuteTime":{"end_time":"2023-08-21T16:35:32.422191Z","start_time":"2023-08-21T16:35:32.419696Z"}},"key":"ZDpDF1f9Z2"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"chnn_state_space = analysis.simulate_activations(mtx.values,\n                                            noise_coef=0.37,\n                                            num_iter=100000,\n                                            beta=0.04,\n                                            random_state=42)","key":"WGEHdGUHDb"},{"type":"output","id":"UZ2hQz9F6PC-i35W0DMsM","data":[{"name":"stderr","output_type":"stream","text":"100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 100000/100000 [00:21<00:00, 4619.54it/s]\n"}],"key":"GxReJ8qXVU"}],"data":{"type":"notebook-code","ExecuteTime":{"end_time":"2023-08-21T16:44:39.716101Z","start_time":"2023-08-21T16:44:22.264954Z"}},"key":"kNzun5DFYD"},{"type":"block","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create your Hopfield Embedding","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sETwIMGHQO"}],"identifier":"create-your-hopfield-embedding","label":"Create your Hopfield Embedding","html_id":"create-your-hopfield-embedding","implicit":true,"key":"uPrcKU6ppW"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Again, a few seconds...","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"rktIJD32Kc"}],"key":"tkDNrk2x3A"}],"data":{"type":"notebook-content","ExecuteTime":{"end_time":"2023-08-21T16:37:38.466307Z","start_time":"2023-08-21T16:37:38.460513Z"}},"key":"KbWKJuGqcQ"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"chnn_projection = analysis.create_embeddings(chnn_state_space,\n                                             attractor_sample=1000,\n                                             random_state=42)","key":"ur5lO2S4B2"},{"type":"output","id":"k6XZlESLhSEldohV5MXJy","data":[{"name":"stderr","output_type":"stream","text":"100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1000/1000 [00:59<00:00, 16.92it/s]\n"}],"key":"BGi6JzQ8Fi"}],"data":{"type":"notebook-code","ExecuteTime":{"end_time":"2023-08-21T16:45:55.879874Z","start_time":"2023-08-21T16:45:14.184761Z"}},"key":"D2ZCodwvZe"},{"type":"block","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the state space","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ScuzHCZ8Jt"}],"identifier":"plot-the-state-space","label":"Plot the state space","html_id":"plot-the-state-space","implicit":true,"key":"p2pam4ArHb"}],"data":{"type":"notebook-content"},"key":"hxmCCjjrgd"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"ax = chnn_projection.plot(chnn_state_space.states, plot_type='contourf',\n                          density_bins=30, density_sigma=0.5, levels=12, alpha=0.8, cmap='Greens',\n                          attractor_plot_type='glassbrain', attractor_kwargs=dict(cmap='binary'),\n                          regimes_fill_kwargs=dict(alpha=0.0),\n                          regimes_contour_kwargs=dict(alpha=1.0, colors='black')\n                         )\nax.set_yticks([])\nax.grid(False)","key":"vG7lUMRfnF"},{"type":"output","id":"RWmCLXbuoBf7pFuxOmUh1","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"802d1dd40068d39638cfbdb6f2f33935","path":"/802d1dd40068d39638cfbdb6f2f33935.png"},"text/plain":{"content":"<Figure size 480x480 with 10 Axes>","content_type":"text/plain"}}}],"key":"Qw7gUhALNc"}],"data":{"type":"notebook-code","ExecuteTime":{"end_time":"2023-08-21T16:48:42.956690Z","start_time":"2023-08-21T16:48:31.603657Z"}},"key":"mAsh1vxhRj"}],"key":"xo3YVmiIq0"},"references":{"cite":{"order":[],"data":{}}}}